{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GigGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GigGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACE,sBAAMC,SAZa,SAACC,GAEpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAc,MAMlB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAnBhB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAGuBF,EAHvB,+DAKKG,MAAMD,GALX,cAKbE,EALa,gBAMIA,EAAUC,OANd,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAE7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAbnB,kBAkBZK,GAlBY,4CAAH,sDCAPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAE/B,OACI,sBAAKa,UAAU,yDAAf,UACG,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCHFO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAKxB,ECN0B,SAACA,GAE3B,MAA0Bd,mBAAS,CAEjCoB,KAAM,GACNa,SAAS,IAHX,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAbAC,qBAAU,WAERvB,EAAQC,GAAUuB,MAAK,SAACC,GAEtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKZ,CAACnB,IAEGoB,EDhBuBK,CAAazB,GAA/BY,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAGnB,OACE,qCACE,oBAAIJ,UAAU,oDAAd,SAAmEf,IAEjEmB,GAAW,mBAAGJ,UAAU,mDAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEEH,EAAOJ,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOxBgB,EAxBM,WACnB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACE,qCACE,wDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAGE0C,EAAWnB,KAAI,SAACR,GACd,OAAO,cAAC,EAAD,CAEGA,SAAUA,GADNA,YCRxB4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7052e427.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n\r\n  const [inputvalue, setinputvalue] = useState('');\r\n\r\n  const handleInputchange = (e) => {\r\n\r\n    setinputvalue(e.target.value);\r\n\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    if(inputvalue.trim().length > 2){\r\n        setcategories((cats) => [inputvalue,...cats]);\r\n        setinputvalue('');\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputvalue} onChange={handleInputchange} />\r\n    </form>\r\n  );\r\n\r\n  \r\n};\r\n\r\n\r\nAddCategory.propTypes={\r\n\r\n    setcategories:PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url =\r\n    `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=hZGG6lowXmZWvnUJLMUehxDGP02zVesW`;\r\n\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      \r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n\r\n    });\r\n\r\n    return gifs;\r\n\r\n  };","import React from 'react'\r\n\r\nexport const GigGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React /* , { useEffect, useState } */ from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GigGridItem } from \"./GigGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  \r\n  \r\n\r\n  const {data:images,loading} = useFetchGifs(category);\r\n\r\n  \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__bounce animate__fadeIn\">{category}</h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__bounce animate__flash\">Loading</p> }\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n        images.map((img) => {\r\n          return <GigGridItem key={img.id} {...img} />;\r\n        })\r\n        }\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setstate] = useState({\r\n      \r\n    data: [],\r\n    loading: true,\r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs(category).then((imgs) => {\r\n\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n\r\n    });\r\n\r\n  }, [category]);\r\n\r\n  return state; // {data:[],loading:true};\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setcategories] = useState([\"One Punch\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp Jose Omar</h2>\r\n      <AddCategory setcategories={setcategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n\r\n        categories.map((category) => {\r\n          return <GifGrid\r\n                   key={category}\r\n                    category={category}\r\n                  />;\r\n        })\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp  from './GifExpertApp';\n\n\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}